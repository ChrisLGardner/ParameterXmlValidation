trigger:
 - master

variables:
  ExtensionId: CLG-ParameterXmlValidation
  PackageId: chrisgardner

stages:
  - stage: build
    jobs:
    - job: BuildExtension
      displayName: Build Extension
      pool:
        vmimage: windows-latest
        demands: npm
      steps:
      - task: gittools.gitversion.gitversion-task.GitVersion@4
        displayName: GitVersion
        inputs:
          preferBundledVersion: false

      - task: qetza.replacetokens.replacetokens-task.replacetokens@3
        displayName: 'Replace tokens in **/task.json'
        inputs:
          rootDirectory: '$(System.DefaultWorkingDirectory)'
          targetFiles: '**/task.json'

      - task: ms-devlabs.vsts-developer-tools-build-tasks.package-extension-build-task.PackageVSTSExtension@1
        displayName: 'Create Package -Private'
        inputs:
          rootFolder: Extension
          outputPath: '$(Build.ArtifactStagingDirectory)\vsix'
          publisherId: '$(PackageID)'
          extensionId: '$(ExtensionID)'
          extensionTag: '-DEV'
          extensionVersion: '$(GitVersion.MajorMinorPatch)'
          updateTasksVersion: true
          extensionVisibility: private


      - task: ms-devlabs.vsts-developer-tools-build-tasks.package-extension-build-task.PackageVSTSExtension@1
        displayName: 'Create Package -Public'
        inputs:
          rootFolder: Extension
          outputPath: '$(Build.ArtifactStagingDirectory)\vsix'
          publisherId: '$(PackageID)'
          extensionId: '$(ExtensionID)'
          extensionVersion: '$(GitVersion.MajorMinorPatch)'
          updateTasksVersion: true
          extensionVisibility: public


      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)\vsix'
          artifact: 'vsix'

  - stage: Private
    dependsOn: build
    jobs:
    - deployment: DeployPrivate
      displayName: Deploy Private to Marketplace
      pool:
        vmimage: windows-latest
        demands: npm
      environment: params-private-marketplace
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: 'vsix'
                  buildType: 'current'
                  targetPath: '$(System.DefaultWorkingDirectory)'
              - powershell: |
                  $Vsix = Get-ChildItem -Path $(System.DefaultWorkingDirectory) -Filter *dev*.vsix
                  Write-Host "##vso[task.setvariable variable=vsixpath]$($Vsix.FullName)"
                displayName: Find vsix
              - task: jessehouwing.jessehouwing-vsts-extension-tasks.vsts-extension-publish.ExtensionPublishTask@0
                displayName: 'Publish Private Extension'
                inputs:
                  VsixPath: '$(VsixPath)'
                  ServiceEndpoint: 'Chris Marketplace'
                  TfxInstall: true

  - stage: Public
    dependsOn: Private
    jobs:
    - deployment: DeployPublic
      displayName: Deploy Public to Marketplace
      pool:
        vmimage: windows-latest
        demands: npm
      environment: params-public-marketplace
      strategy:
        runOnce:
          deploy:
            steps:
              - task: DownloadPipelineArtifact@2
                inputs:
                  artifact: 'vsix'
                  buildType: 'current'
                  targetPath: '$(System.DefaultWorkingDirectory)'
              - powershell: |
                  $Vsix = Get-ChildItem -Path $(System.DefaultWorkingDirectory) -Filter *.vsix | Where-Object FullName -notlike '*DEV*'
                  Write-Host "##vso[task.setvariable variable=vsixpath]$($Vsix.FullName)"
                  Write-Host "##vso[task.setvariable variable=version]$($Vsix.FullName | Select-String -pattern '\d+\.\d+\.\d+\.' | Foreach-Object {$_.Matches[0].Value})"
                displayName: Find vsix
              - task: jessehouwing.jessehouwing-vsts-extension-tasks.vsts-extension-publish.ExtensionPublishTask@0
                displayName: 'Publish Private Extension'
                inputs:
                  VsixPath: '$(VsixPath)'
                  ServiceEndpoint: 'Chris Marketplace'
                  TfxInstall: true
              - task: GitHubTag@1
                inputs:
                  githubEndpoint: 'ChrisGithub'
                  repositoryName: '$(Build.Repository.Name)'
                  tag: '$(Version)'

